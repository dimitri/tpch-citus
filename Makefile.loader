TOP := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

# Those are meant to be filled-in by the tpch.py driver
# It's still possible to hack them around directly, of course
SF      ?= 10
C       ?= 100
S       ?= 1
DSN     ?= postgresql://tpch@localhost:5432/TPCH
STREAM  ?= 1
SBUFS   ?= 4GB

TPCH_PG  = $(TOP)/tpch-pg/
TPCH_SRC = $(TOP)/tpch-pg/src/
QUERIES  = ../queries/
DBGEN    = ./dbgen
QGEN     = DSS_QUERY=$(QUERIES) ./qgen
PSQL     = psql -X -a -d $(DSN)

COPY_DIR = $(TOP)/../
PSQL_RES = psql -X -d tpch-results

PACKAGES = git htop tmux emacs postgresql96* python36 python36-devel python36-pip python36-docutils
DEB_PKGS = wget ca-certificates python3 python3-pip python3-docutils tmux git htop ipcalc

TABLES   = nation, region, part, supplier, partsupp, customer, orders, lineitem
VTABLES  = nation region part supplier partsupp customer orders lineitem

APT_PG_O_KEY = https://www.postgresql.org/media/keys/ACCC4CF8.asc

rh:
	sudo yum -q -y groupinstall "Development Tools"
	sudo yum -q -y install $(PACKAGES)
	sudo localedef -i en_US -f UTF-8 en_US.UTF-8
	./scripts/install-local-pgsql.sh
	psql -v ON_ERROR_STOP=1 -f schema/tracking.sql -d tpch-results

deb:
	sudo cp scripts/pgdg.list /etc/apt/sources.list.d/pgdg.list
	sudo apt-get install -y $(DEB_PKGS)
	wget --quiet -O - $(APT_PG_O_KEY) | sudo apt-key add -
	sudo apt-get update
	sudo apt-get -y upgrade

deb-pg9.6: deb
	sudo apt-get install -y postgresql-9.6 postgresql-contrib-9.6
	sudo ./scripts/install-tpch-pgsql.sh 9.6 $(SBUFS)

deb-pg10: deb
	sudo apt-get install -y postgresql-10 postgresql-contrib-10
	sudo ./scripts/install-tpch-pgsql.sh 10 $(SBUFS)

deb-pg11:
	sudo cp scripts/pgdg-11.list /etc/apt/sources.list.d/pgdg.list
	sudo cp scripts/pgdg.pref /etc/apt/preferences.d/pgdg.pref
	sudo apt-get install -y $(DEB_PKGS)
	wget --quiet -O - $(APT_PG_O_KEY) | sudo apt-key add -
	sudo apt-get update
	sudo apt-get -y upgrade
	sudo apt-get -y install postgresql-11 postgresql-contrib-11
	sudo ./scripts/install-tpch-pgsql.sh 11 $(SBUFS)

getipaddr:
	./scripts/getipaddr.py

tools:
	sudo pip-3.6 install -r requirements.txt
	make -s -C $(TPCH_SRC) clean all

schema:
	$(PSQL) -f $(TOP)/$(SCHEMA)

constraints:
	$(PSQL) -f schema/tpch-pkeys.sql
	$(PSQL) -f schema/tpch-index.sql
	$(PSQL) -f schema/tpch-alter.sql

vacuum:
	$(PSQL) -c '\timing' -f schema/tpch-vacuum.sql

load:
	# load the next Step of data
	cd $(TPCH_SRC) && $(DBGEN) -s $(SF) -C $(C) -S $(S) -D -n $(DSN)

cardinalities:
	$(PSQL) -c '\timing' -c 'TABLE cardinalities;'

stream:
	cd $(TPCH_SRC) && $(QGEN) $(STREAM)             \
	| $(PSQL) -o /dev/null -c '\timing' -f -

refresh:
	cd $(TPCH_SRC) && $(DBGEN) -s $(SF) -U $(C) -S $(S) -D -n $(DSN) -v

drop:
	$(PSQL) -c 'drop table $(TABLES) cascade;'

dump:
	$(PSQL_RES) -c 'copy run to stdout;' > $(COPY_DIR)/run.copy
	$(PSQL_RES) -c 'copy job to stdout;' > $(COPY_DIR)/job.copy
	$(PSQL_RES) -c 'copy query to stdout;' > $(COPY_DIR)/query.copy

.PHONY: dbgen repo os load stream refresh drop
.PHONY: schema constraints vacuum
.PHONY: deb deb-pg9.6 deb-pg10 deb-pg11
